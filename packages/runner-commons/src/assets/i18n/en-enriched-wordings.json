{
  "role": [
    {"id":"alert","name":"alert"},
    {"id":"alertdialog","name":"alert dialog"},
    {"id":"application","name":"application"},
    {"id":"article","name":"article"},
    {"id":"banner","name":"banner"},
    {"id":"button","name":"button"},
    {"id":"cell","name":"cell"},
    {"id":"checkbox","name":"checkbox"},
    {"id":"columnheader","name":"column header"},
    {"id":"combobox","name":"combo box"},
    {"id":"command","name":"command"},
    {"id":"comment","name":"comment"},
    {"id":"complementary","name":"complementary"},
    {"id":"composite","name":"composite"},
    {"id":"contentinfo","name":"contentinfo"},
    {"id":"definition","name":"definition"},
    {"id":"dialog","name":"dialog"},
    {"id":"directory","name":"directory"},
    {"id":"document","name":"document"},
    {"id":"feed","name":"flow"},
    {"id":"figure","name":"figure"},
    {"id":"form","name":"form"},
    {"id":"generic","name":"generic"},
    {"id":"grid","name":"grid"},
    {"id":"gridcell","name":"grid cell"},
    {"id":"group","name":"group"},
    {"id":"heading","name":"title"},
    {"id":"img","name":"picture"},
    {"id":"input","name":"entry"},
    {"id":"landmark","name":"landmark"},
    {"id":"link","name":"link"},
    {"id":"list","name":"list"},
    {"id":"listbox","name":"list box"},
    {"id":"listitem","name":"list item"},
    {"id":"log","name":"log"},
    {"id":"main","name":"main"},
    {"id":"mark","name":"mark"},
    {"id":"math","name":"math"},
    {"id":"menu","name":"menu"},
    {"id":"menubar","name":"menubar"},
    {"id":"menuitem","name":"menuitem"},
    {"id":"menuitemcheckbox","name":"menuitemcheckbox"},
    {"id":"menuitemradio","name":"menuitemradio"},
    {"id":"meter","name":"counter"},
    {"id":"navigation","name":"navigation"},
    {"id":"none","name":"no"},
    {"id":"note","name":"note"},
    {"id":"option","name":"option"},
    {"id":"presentation","name":"presentation"},
    {"id":"progressbar","name":"progress bar"},
    {"id":"radio","name":"radio"},
    {"id":"radiogroup","name":"radio group"},
    {"id":"range","name":"range"},
    {"id":"region","name":"region"},
    {"id":"roletype","name":"role type"},
    {"id":"row","name":"row"},
    {"id":"rowgroup","name":"row group"},
    {"id":"rowheader","name":"row header"},
    {"id":"scrollbar","name":"scroll bar"},
    {"id":"search","name":"search"},
    {"id":"searchbox","name":"search box"},
    {"id":"section","name":"section"},
    {"id":"sectionhead","name":"section header"},
    {"id":"select","name":"select"},
    {"id":"separator","name":"separator"},
    {"id":"slider","name":"slider"},
    {"id":"spinbutton","name":"spin button"},
    {"id":"status","name":"status"},
    {"id":"structure","name":"structure"},
    {"id":"suggestion","name":"suggestion"},
    {"id":"switch","name":"switch"},
    {"id":"tab","name":"tab"},
    {"id":"table","name":"table"},
    {"id":"tablist","name":"tablist"},
    {"id":"tabpanel","name":"tabpanel"},
    {"id":"term","name":"term"},
    {"id":"textbox","name":"text box"},
    {"id":"timer","name":"timer"},
    {"id":"toolbar","name":"toolbar"},
    {"id":"tooltip","name":"tooltip"},
    {"id":"tree","name":"tree"},
    {"id":"treegrid","name":"tree grid"},
    {"id":"treeitem","name":"tree item"},
    {"id":"widget","name":"widget"},
    {"id":"window","name":"window"}
  ],
  "enriched": [
    {
      "key": "key.when.withinElement.roleAndName",
      "description": "Selects the element whose [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types and accessible [name](https://russmaxdesign.github.io/html-elements-names/) are specified <br />âš  remember to deselect the element with <b>[I reset context](#i-reset-context)</b> if you're no longer acting on it",
      "wording": "Within a(n) $roleName named {string}"
    },
    {
      "key": "key.then.element.withRoleAndName",
      "description": "Checks that an Html element exists with the specified [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types) and [name](https://russmaxdesign.github.io/html-elements-names/)",
      "wording": "I should see a(n) $roleName named {string}"
    },
    {
      "key": "key.then.element.not.withRoleAndName",
      "description": "Checks that an Html element does not exists with the specified [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types) and [name](https://russmaxdesign.github.io/html-elements-names/)",
      "wording": "I should not see a(n) $roleName named {string}"
    },
    {
      "key": "key.then.element.withRoleAndNameAndContent",
      "description": "Checks that an Html element exists with the specified [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types), [name](https://russmaxdesign.github.io/html-elements-names/) and content",
      "wording": "I should see a(n) $roleName named {string} and containing {string}"
    },
    {
      "key": "key.then.element.withRoleAndNameAndContentDisabled",
      "description": "Checks that an Html element exists with the specified [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types), [name](https://russmaxdesign.github.io/html-elements-names/) and content, and with the disabled attribute set to true",
      "wording": "I should see a(n) $roleName named {string} and containing {string} disabled"
    },
    {
      "key": "key.then.element.withRoleAndNameAndContentEnabled",
      "description": "Checks that an Html element exists with the specified [accessible role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles#aria_role_types), [name](https://russmaxdesign.github.io/html-elements-names/) and content, and with the disabled attribute set to false",
      "wording": "I should see a(n) $roleName named {string} and containing {string} enabled"
    },
    {
      "key": "key.when.type",
      "description": "Writes the sentence given as a parameter inside the specified field (useful for example to fill in a form field)",
      "wording": "I type the sentence {string} in the $roleName named {string}"
    }
  ]
}

