name: 'UUV CI'

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]


env:
  NODE_VERSION: 18.14.0
  NPM_PACKAGE_SCOPE: uuv

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            node_modules
            packages/assistant/node_modules
            packages/docs/node_modules
            packages/runner-commons/node_modules
            packages/runner-cypress/node_modules
            packages/runner-playwright/node_modules
      - name: Use Node.js ${{env.NODE_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
      - run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Build artifacts
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "build"
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            packages/runner-commons/dist
            packages/runner-cypress/dist
            packages/runner-cypress/src/cucumber/step_definitions/cypress/generated
            packages/runner-playwright/src/cucumber/step_definitions/playwright/generated
            packages/runner-playwright/dist
            packages/docs/docs/03-wordings/01-generated-wording-description
            packages/assistant/dist
            packages/assistant/build
      - name: Upload docs artifact
        uses: actions/upload-pages-artifact@main
        with:
          name: github-pages
          path: packages/docs/build

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Running playwright tests except cypress and playwright
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "test"
          exclude: "runner-cypress,runner-playwright"

  test-cypress:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node18.12.0-chrome107
    needs: [test, build]
    steps:
      - uses: actions/checkout@v3
      - name: Running cypress tests
        uses: ./.github/actions/nx-test-runner
        with:
          node-version: ${{env.NODE_VERSION}}
          runner-name: "cypress"

  test-playwright:
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - uses: actions/checkout@v3
      - name: Running playwright tests
        uses: ./.github/actions/nx-test-runner
        with:
          node-version: ${{env.NODE_VERSION}}
          runner-name: "playwright"

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Lint for all projects
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "lint"

  release:
    if: github.ref == 'refs/heads/main'
    needs: [ test-cypress, test-playwright ]
    permissions:
      contents: write
      packages: write
      issues: write
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: packages
      - name: Release public packages
        uses: ./.github/actions/nx-run-many
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "semantic-release"
          parallel: "false"
      - name: Update package-lock.json
        run: npm install
      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Push the brand-new package-lock.json
        with:
          commit_message: "chore(release): update package-lock.json [skip ci]"
          commit_user_name: UUV Bot
          commit_user_email: uuv-bot@kemitech.io
          commit_author: UUV Bot <uuv-bot@kemitech.io>
          file_pattern: "package-lock.json"
      - name: Upload Release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            dist/packages

  publish:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ release ]
    environment: release
    steps:
      - uses: actions/checkout@v3
      - name: Download Release artifact
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
          path: dist/packages
      - name: Use Node.js ${{env.NODE_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          registry-url: 'https://registry.npmjs.org'
      - name: Publishing packages
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: |
          for packagePath in $(find dist/packages -name "*.tgz"); do
          npm publish $packagePath --scope ${{env.NPM_PACKAGE_SCOPE}} --access public
          done

  publish-docs:
    if: github.ref == 'refs/heads/main'
    needs: [ publish ]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
