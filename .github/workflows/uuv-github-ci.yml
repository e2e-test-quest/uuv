name: 'UUV CI/CD'

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev" ]


env:
  NODE_VERSION: 18.14.0
  NPM_PACKAGE_SCOPE: uuv

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          path: |
            node_modules
            packages/assistant/node_modules
            packages/docs/node_modules
            packages/runner-commons/node_modules
            packages/runner-cypress/node_modules
            packages/runner-playwright/node_modules
      - name: Use Node.js ${{env.NODE_VERSION}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
      - run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Build artifact
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "build"
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            packages/runner-commons/dist
            packages/runner-cypress/dist
            packages/runner-cypress/src/cucumber/step_definitions/cypress/generated
            packages/runner-playwright/src/cucumber/step_definitions/playwright/generated
            packages/runner-playwright/dist
            packages/docs/docs/03-wordings/01-generated-wording-description
            packages/assistant/dist
            packages/assistant/build
      - name: Upload docs artifact
        uses: actions/upload-pages-artifact@main
        with:
          name: github-pages
          path: packages/docs/build

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Execution des tests unitaires
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "test"
          exclude: "runner-cypress,runner-playwright,assistant"

  test-cypress:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node18.12.0-chrome107
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Execution des tests unitaires cypress
        uses: ./.github/actions/nx-test-runner
        with:
          node-version: ${{env.NODE_VERSION}}
          runner-name: "cypress"

  test-playwright:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Execution des tests unitaires playwright
        uses: ./.github/actions/nx-test-runner
        with:
          node-version: ${{env.NODE_VERSION}}
          runner-name: "playwright"

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Lint for all projects
        uses: ./.github/actions/nx-run-many
        with:
          node-version: ${{env.NODE_VERSION}}
          target: "lint"

  publish-npm-assistant:
    if: github.ref == 'refs/heads/main'
    needs: [lint, build, test, test-cypress, test-playwright]
    runs-on: ubuntu-latest
    environment: prod-assistant
    steps:
      - uses: actions/checkout@v3
      - name: Publish @uuv/assistant
        uses: ./.github/actions/npm-publish
        with:
          node-version: ${{env.NODE_VERSION}}
          app-name: "assistant"
          npm-package-scope: ${{env.NPM_PACKAGE_SCOPE}}
          npm-token: ${{secrets.NPM_ACCESS_TOKEN}}

  publish-npm-runner-commons:
    if: github.ref == 'refs/heads/main'
    needs: [lint, build, test, test-cypress, test-playwright]
    runs-on: ubuntu-latest
    environment: prod-runner-commons
    steps:
      - uses: actions/checkout@v3
      - name: Publish @uuv/runner-commons
        uses: ./.github/actions/npm-publish
        with:
          node-version: ${{env.NODE_VERSION}}
          app-name: "runner-commons"
          npm-package-scope: ${{env.NPM_PACKAGE_SCOPE}}
          npm-token: ${{secrets.NPM_ACCESS_TOKEN}}


  publish-npm-runner-cypress:
    if: github.ref == 'refs/heads/main'
    needs: [lint, build, test, test-cypress, test-playwright]
    runs-on: ubuntu-latest
    environment: prod-runner-cypress
    steps:
      - uses: actions/checkout@v3
      - name: Publish @uuv/cypress
        uses: ./.github/actions/npm-publish
        with:
          node-version: ${{env.NODE_VERSION}}
          app-name: "runner-cypress"
          npm-package-scope: ${{env.NPM_PACKAGE_SCOPE}}
          npm-token: ${{secrets.NPM_ACCESS_TOKEN}}

  publish-npm-runner-playwright:
    if: github.ref == 'refs/heads/main'
    needs: [ lint, build, test, test-cypress, test-playwright ]
    runs-on: ubuntu-latest
    environment: prod-runner-playwright
    steps:
      - uses: actions/checkout@v3
      - name: Publish @uuv/playwright
        uses: ./.github/actions/npm-publish
        with:
          node-version: ${{env.NODE_VERSION}}
          app-name: "runner-playwright"
          npm-package-scope: ${{env.NPM_PACKAGE_SCOPE}}
          npm-token: ${{secrets.NPM_ACCESS_TOKEN}}

  publish-docs:
    if: github.ref == 'refs/heads/main'
    needs: [ lint, build, test, test-cypress, test-playwright ]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2